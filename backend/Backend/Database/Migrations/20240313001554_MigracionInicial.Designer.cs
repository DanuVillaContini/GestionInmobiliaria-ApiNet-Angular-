// <auto-generated />
using Backend.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240313001554_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("Backend.Domain.EstadoProducto", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EstadoId");

                    b.ToTable("EstadoProducto");

                    b.HasData(
                        new
                        {
                            EstadoId = 1,
                            Nombre = "DISPONIBLE"
                        },
                        new
                        {
                            EstadoId = 2,
                            Nombre = "RESERVADO"
                        },
                        new
                        {
                            EstadoId = 3,
                            Nombre = "VENDIDO"
                        });
                });

            modelBuilder.Entity("Backend.Domain.EstadoReserva", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EstadoId");

                    b.ToTable("EstadoReserva");

                    b.HasData(
                        new
                        {
                            EstadoId = 1,
                            Nombre = "INGRESADA"
                        },
                        new
                        {
                            EstadoId = 2,
                            Nombre = "APROBADA"
                        },
                        new
                        {
                            EstadoId = 3,
                            Nombre = "CANCELADA"
                        },
                        new
                        {
                            EstadoId = 4,
                            Nombre = "RECHAZADA"
                        });
                });

            modelBuilder.Entity("Backend.Domain.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlImagen")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("ProductoId");

                    b.ToTable("Producto");

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            Barrio = "Prospero Mena",
                            Codigo = "PDVzL-0001",
                            Precio = 1000000m
                        },
                        new
                        {
                            ProductoId = 2,
                            Barrio = "Modelo",
                            Codigo = "PDVhL-0002",
                            Precio = 2500000m
                        },
                        new
                        {
                            ProductoId = 3,
                            Barrio = "Oeste II",
                            Codigo = "PDVkL-0003",
                            Precio = 35000000m
                        });
                });

            modelBuilder.Entity("Backend.Domain.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteUsuarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstadoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReservaId");

                    b.HasIndex("ClienteUsuarioId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("Backend.Domain.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EsVendedor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameUser")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Contraseña = "userTEST1*",
                            Correo = "user_test_1@example",
                            EsVendedor = true,
                            NameUser = "userTEST1"
                        });
                });

            modelBuilder.Entity("Backend.Domain.Reserva", b =>
                {
                    b.HasOne("Backend.Domain.Usuario", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Domain.EstadoReserva", "EstadoReserva")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Domain.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Domain.Usuario", "UserVendedor")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("EstadoReserva");

                    b.Navigation("Producto");

                    b.Navigation("UserVendedor");
                });
#pragma warning restore 612, 618
        }
    }
}
